{
  "version": 3,
  "sources": ["./rsa.min.js"],
  "sourcesContent": ["// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nfunction BigInteger(a,b,c) {\n  if(a != null)\n    if(\"number\" == typeof a) this.fromNumber(a,b,c);\n    else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n    else this.fromString(a,b);\n}\n\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this[i++]+w[j]+c;\n    c = Math.floor(v/0x4000000);\n    w[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this[i]&0x7fff;\n    var h = this[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this[i]&0x3fff;\n    var h = this[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w[j++] = l&0xfffffff;\n  }\n  return c;\n}\nif(j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n}\nelse if(j_lm && (navigator.appName != \"Netscape\")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n}\nelse { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr,vv;\nrr = \"0\".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) { return BI_RM.charAt(n); }\nfunction intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r[i] = this[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this[0] = x;\n  else if(x < -1) this[0] = x+this.DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this[this.t++] = (x>>(this.DB-sh));\n    }\n    else\n      this[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  if(k == 8 && (s[0]&0x80) != 0) {\n    this.s = -1;\n    if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return \"-\"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }\n    while(i >= 0) {\n      if(p < k) {\n        d = (this[i]&((1<<p)-1))<<(k-p);\n        d |= this[--i]>>(p+=this.DB-k);\n      }\n      else {\n        d = (this[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += int2char(d);\n    }\n  }\n  return m?r:\"0\";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return (this.s<0)?-r:r;\n  while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];\n  for(i = n-1; i >= 0; --i) r[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r[i-n] = this[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r[i+ds+1] = (this[i]>>cbs)|c;\n    c = (this[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r[i] = 0;\n  r[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r[0] = this[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r[i-ds-1] |= (this[i]&bm)<<cbs;\n    r[i-ds] = this[i]>>bs;\n  }\n  if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this[i]-a[i];\n    r[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this[i];\n      r[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  }\n  else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a[i];\n      r[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r[i++] = this.DV+c;\n  else if(c > 0) r[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r[i] = 0;\n  for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x[i],r,2*i,0,1);\n    if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r[i+x.t] -= x.DV;\n      r[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm[pm.t-1]);\t// normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }\n  else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y);\t// \"negative\" y so we can replace sub with am later\n  while(y.t < ys) y[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);\n    if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\t// Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);\t// Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) { this.m = m; }\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;\t\t// y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;\t// y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;\t// y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\t// y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;\t\t// y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp&0x7fff;\n  this.mph = this.mp>>15;\n  this.um = (1<<(m.DB-15))-1;\n  this.mt2 = 2*m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)\t// pad x so am has enough room later\n    x[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x[i]*mp mod DV\n    var j = x[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n// prng4.js - uses Arcfour as a PRNG\n\nfunction Arcfour() {\n  this.i = 0;\n  this.j = 0;\n  this.S = new Array();\n}\n\n// Initialize arcfour context from key, an array of ints, each from [0..255]\nfunction ARC4init(key) {\n  var i, j, t;\n  for(i = 0; i < 256; ++i)\n    this.S[i] = i;\n  j = 0;\n  for(i = 0; i < 256; ++i) {\n    j = (j + this.S[i] + key[i % key.length]) & 255;\n    t = this.S[i];\n    this.S[i] = this.S[j];\n    this.S[j] = t;\n  }\n  this.i = 0;\n  this.j = 0;\n}\n\nfunction ARC4next() {\n  var t;\n  this.i = (this.i + 1) & 255;\n  this.j = (this.j + this.S[this.i]) & 255;\n  t = this.S[this.i];\n  this.S[this.i] = this.S[this.j];\n  this.S[this.j] = t;\n  return this.S[(t + this.S[this.i]) & 255];\n}\n\nArcfour.prototype.init = ARC4init;\nArcfour.prototype.next = ARC4next;\n\n// Plug in your RNG constructor here\nfunction prng_newstate() {\n  return new Arcfour();\n}\n\n// Pool size must be a multiple of 4 and greater than 32.\n// An array of bytes the size of the pool will be passed to init()\nvar rng_psize = 256;\n\n// Random number generator - requires a PRNG backend, e.g. prng4.js\n\n// For best results, put code like\n// <body onClick='rng_seed_time();' onKeyPress='rng_seed_time();'>\n// in your main HTML document.\n\nvar rng_state;\nvar rng_pool;\nvar rng_pptr;\n\n// Mix in a 32-bit integer into the pool\nfunction rng_seed_int(x) {\n  rng_pool[rng_pptr++] ^= x & 255;\n  rng_pool[rng_pptr++] ^= (x >> 8) & 255;\n  rng_pool[rng_pptr++] ^= (x >> 16) & 255;\n  rng_pool[rng_pptr++] ^= (x >> 24) & 255;\n  if(rng_pptr >= rng_psize) rng_pptr -= rng_psize;\n}\n\n// Mix in the current time (w/milliseconds) into the pool\nfunction rng_seed_time() {\n  rng_seed_int(new Date().getTime());\n}\n\n// Initialize the pool with junk if needed.\nif(rng_pool == null) {\n  rng_pool = new Array();\n  rng_pptr = 0;\n  var t;\n  if(window.crypto && window.crypto.getRandomValues) {\n    // Use webcrypto if available\n    var ua = new Uint8Array(32);\n    window.crypto.getRandomValues(ua);\n    for(t = 0; t < 32; ++t)\n      rng_pool[rng_pptr++] = ua[t];\n  }\n  if(navigator.appName == \"Netscape\" && navigator.appVersion < \"5\" && window.crypto) {\n    // Extract entropy (256 bits) from NS4 RNG if available\n    var z = window.crypto.random(32);\n    for(t = 0; t < z.length; ++t)\n      rng_pool[rng_pptr++] = z.charCodeAt(t) & 255;\n  }  \n  while(rng_pptr < rng_psize) {  // extract some randomness from Math.random()\n    t = Math.floor(65536 * Math.random());\n    rng_pool[rng_pptr++] = t >>> 8;\n    rng_pool[rng_pptr++] = t & 255;\n  }\n  rng_pptr = 0;\n  rng_seed_time();\n  //rng_seed_int(window.screenX);\n  //rng_seed_int(window.screenY);\n}\n\nfunction rng_get_byte() {\n  if(rng_state == null) {\n    rng_seed_time();\n    rng_state = prng_newstate();\n    rng_state.init(rng_pool);\n    for(rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr)\n      rng_pool[rng_pptr] = 0;\n    rng_pptr = 0;\n    //rng_pool = null;\n  }\n  // TODO: allow reseeding after first request\n  return rng_state.next();\n}\n\nfunction rng_get_bytes(ba) {\n  var i;\n  for(i = 0; i < ba.length; ++i) ba[i] = rng_get_byte();\n}\n\nfunction SecureRandom() {}\n\nSecureRandom.prototype.nextBytes = rng_get_bytes;\n\n// Depends on jsbn.js and rng.js\n\n// Version 1.1: support utf-8 encoding in pkcs1pad2\n\n// convert a (hex) string to a bignum object\nfunction parseBigInt(str,r) {\n  return new BigInteger(str,r);\n}\n\nfunction linebrk(s,n) {\n  var ret = \"\";\n  var i = 0;\n  while(i + n < s.length) {\n    ret += s.substring(i,i+n) + \"\\n\";\n    i += n;\n  }\n  return ret + s.substring(i,s.length);\n}\n\nfunction byte2Hex(b) {\n  if(b < 0x10)\n    return \"0\" + b.toString(16);\n  else\n    return b.toString(16);\n}\n\n// PKCS#1 (type 2, random) pad input string s to n bytes, and return a bigint\nfunction pkcs1pad2(s,n) {\n  if(n < s.length + 11) { // TODO: fix for utf-8\n    alert(\"Message too long for RSA\");\n    return null;\n  }\n  var ba = new Array();\n  var i = s.length - 1;\n  while(i >= 0 && n > 0) {\n    var c = s.charCodeAt(i--);\n    if(c < 128) { // encode using utf-8\n      ba[--n] = c;\n    }\n    else if((c > 127) && (c < 2048)) {\n      ba[--n] = (c & 63) | 128;\n      ba[--n] = (c >> 6) | 192;\n    }\n    else {\n      ba[--n] = (c & 63) | 128;\n      ba[--n] = ((c >> 6) & 63) | 128;\n      ba[--n] = (c >> 12) | 224;\n    }\n  }\n  ba[--n] = 0;\n  var rng = new SecureRandom();\n  var x = new Array();\n  while(n > 2) { // random non-zero pad\n    x[0] = 0;\n    while(x[0] == 0) rng.nextBytes(x);\n    ba[--n] = x[0];\n  }\n  ba[--n] = 2;\n  ba[--n] = 0;\n  return new BigInteger(ba);\n}\n\n// \"empty\" RSA key constructor\nfunction RSAKey() {\n  this.n = null;\n  this.e = 0;\n  this.d = null;\n  this.p = null;\n  this.q = null;\n  this.dmp1 = null;\n  this.dmq1 = null;\n  this.coeff = null;\n}\n\n// Set the public key fields N and e from hex strings\nfunction RSASetPublic(N,E) {\n  if(N != null && E != null && N.length > 0 && E.length > 0) {\n    this.n = parseBigInt(N,16);\n    this.e = parseInt(E,16);\n  }\n  else\n    alert(\"Invalid RSA public key\");\n}\n\n// Perform raw public operation on \"x\": return x^e (mod n)\nfunction RSADoPublic(x) {\n  return x.modPowInt(this.e, this.n);\n}\n\n// Return the PKCS#1 RSA encryption of \"text\" as an even-length hex string\nfunction RSAEncrypt(text) {\n  var m = pkcs1pad2(text,(this.n.bitLength()+7)>>3);\n  if(m == null) return null;\n  var c = this.doPublic(m);\n  if(c == null) return null;\n  var h = c.toString(16);\n  if((h.length & 1) == 0) return h; else return \"0\" + h;\n}\n\n// Return the PKCS#1 RSA encryption of \"text\" as a Base64-encoded string\n//function RSAEncryptB64(text) {\n//  var h = this.encrypt(text);\n//  if(h) return hex2b64(h); else return null;\n//}\n\n// protected\nRSAKey.prototype.doPublic = RSADoPublic;\n\n// public\nRSAKey.prototype.setPublic = RSASetPublic;\nRSAKey.prototype.encrypt = RSAEncrypt;\n//RSAKey.prototype.encrypt_b64 = RSAEncryptB64;"],
  "mappings": "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",
  "names": ["a", "b", "c", "i", "x", "w", "j", "n", "v", "xl", "xh", "l", "h", "m", "s", "r", "k", "mi", "sh", "km", "d", "p", "t", "bs", "cbs", "bm", "ds", "y", "q", "pm", "pt", "ts", "ms", "nsh", "ys", "y0", "yt", "d1", "d2", "e", "qd", "u0", "z", "r2", "g", "key", "ba", "str", "ret", "rng", "N", "E", "text"]
}